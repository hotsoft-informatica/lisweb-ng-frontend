{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"@angular/common/http\";\nexport let LaboratorioService = /*#__PURE__*/(() => {\n  class LaboratorioService {\n    constructor(snackbar, http) {\n      this.snackbar = snackbar;\n      this.http = http;\n      this.baseUrl = 'http://127.0.0.1:3010/laboratorios';\n      this.query = [];\n    }\n\n    showMessage(msg) {\n      this.snackbar.open(msg, 'X', {\n        duration: 3000,\n        horizontalPosition: 'right',\n        verticalPosition: 'top'\n      });\n    }\n\n    create(laboratorio) {\n      return this.http.post(this.baseUrl, laboratorio);\n    }\n\n    read() {\n      return this.http.get(this.baseUrl);\n    }\n\n    readById(id) {\n      const url = `${this.baseUrl}/${id}`;\n      return this.http.get(url);\n    }\n\n    update(laboratorio) {\n      const url = `${this.baseUrl}/${laboratorio.id}`;\n      return this.http.put(url, laboratorio);\n    }\n\n    delete(id) {\n      const url = `${this.baseUrl}/${id}`;\n      return this.http.delete(url);\n    }\n\n    findLaboratorios(active = '', sortOrder = 'asc', pageNumber = 1, pageSize = 3, query) {\n      let params = new HttpParams().set('active', active).set('sortOrder', sortOrder).set('pageNumber', pageNumber.toString()).set('pageSize', pageSize.toString());\n      query === null || query === void 0 ? void 0 : query.forEach(queryItem => {\n        if (queryItem) {\n          const key = `queryItem[${queryItem.key}]`;\n          params = params.append(key, queryItem.value);\n        }\n      });\n      return this.http.get(this.baseUrl, {\n        params\n      });\n    }\n\n    countLaboratorios() {\n      return this.http.get(this.baseUrl, {\n        params: new HttpParams().set('totalCount', 'true')\n      });\n    }\n\n  }\n\n  LaboratorioService.ɵfac = function LaboratorioService_Factory(t) {\n    return new (t || LaboratorioService)(i0.ɵɵinject(i1.MatSnackBar), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  LaboratorioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LaboratorioService,\n    factory: LaboratorioService.ɵfac,\n    providedIn: 'root'\n  });\n  return LaboratorioService;\n})();","map":null,"metadata":{},"sourceType":"module"}